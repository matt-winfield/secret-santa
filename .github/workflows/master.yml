name: Master
on:
    push:
        branches: [main, master]
    pull_request:
        branches: [main, master]
env:
    REGISTRY: docker.io
    IMAGE_NAME: matthewwin/secret-santa
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install dependencies
              run: npm install -g pnpm && pnpm install
            - name: Type check
              run: pnpm typecheck
            - name: Build
              run: pnpm build
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install dependencies
              run: npm install -g pnpm && pnpm install
            - name: Run tests
              run: pnpm test:coverage
    push_to_registry:
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        needs: [build, test]
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.IMAGE_NAME }}

            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v1
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
